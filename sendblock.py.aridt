# Copyright 2019 Andrzej Cichocki

# This file is part of Concern.
#
# Concern is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Concern is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Concern.  If not, see <http://www.gnu.org/licenses/>.

from getblock import readblock, ReadBlocks
from pym2149 import osctrl
from screen import stuff
from collections import OrderedDict
import socket, sys

def sclang():
    with open(configlog) as f:
        from collections import OrderedDict
        bufsize = eval(f.read())['bufsize']
        del OrderedDict
    readblocks = ReadBlocks()
    n = 1
    while True:
        chunks = [osctrl.Message('/foxdot', [text]).ser() for text in readblocks(n)]
        if not chunks:
            return # Nothing to send.
        if max(len(chunk) for chunk in chunks) <= bufsize:
            break
        n *= 2
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # XXX: Close it?
    for chunk in chunks:
        sock.sendto(chunk, ('localhost', 57120))

def foxdot():
    stuff(session, window, readblock())

def main():
    s = slice(1, 3)
    x, y = sys.argv[s]
    del sys.argv[s]
    globals()[dispatch[x][y]]()

dispatch = $repr$(target)
configlog = $"($(configlog))
session = $"$(sessionName) # TODO LATER: Support more than one session.
window = $"$(foxdot windowName)

if '__main__' == __name__:
    main()
